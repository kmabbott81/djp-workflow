# DJP Workflow - Environment Variables Reference
# Sprint 57: Security Hardening - Production-Safe Defaults
#
# SECURITY HYGIENE GUIDELINES:
# 1. NEVER commit .env files with real secrets to version control
# 2. Use strong, randomly-generated secrets (32+ characters)
# 3. Rotate secrets regularly (every 90 days minimum)
# 4. Use different secrets for dev/staging/production
# 5. Store production secrets in secure secret management (Railway, AWS Secrets Manager, etc.)
# 6. Audit secret access logs regularly

# ============================================================================
# Runtime & Server
# ============================================================================
RELAY_ENV=local                 # local | staging | production | test
                                # Controls production safety checks and security posture

# ============================================================================
# Auth / Security Toggles (Sprint 57)
# ============================================================================
DEV_AUTH_MODE=false             # MUST be false in prod and CI
                                # When true: Bypasses API key authentication (DEV ONLY)
                                # Production deployments will refuse to start if true

ACTIONS_ENABLED=false           # Enable true when executing actions
                                # Set to true in production after security audit

TELEMETRY_ENABLED=false         # Enable Prometheus metrics collection
                                # Recommended: true in production for observability

# ============================================================================
# Security Secrets (Sprint 57)
# ============================================================================

# HMAC signing secret for webhook verification (Sprint 57 Step 5)
# If set, X-Signature header becomes REQUIRED on /actions/execute
# Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))"
#ACTIONS_SIGNING_SECRET=

# OAuth token encryption key (Sprint 54)
# MUST be 32 bytes base64-encoded (Fernet key format)
# Generate with: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
#OAUTH_ENCRYPTION_KEY=

# OAuth state TTL in seconds (default: 600 = 10 minutes)
OAUTH_STATE_TTL_SECONDS=600

# ============================================================================
# Data Stores (TLS enforced in production)
# ============================================================================

# PostgreSQL connection string (Sprint 51)
# Format: postgresql://user:password@host:port/database
# Production MUST use: ?sslmode=require
#DATABASE_URL=postgresql://postgres:password@localhost:5432/djp_workflow?sslmode=require

# Redis connection string (Sprint 51 Phase 2)
# Format: redis://[user:password@]host:port[/db]
# Production MUST use: rediss:// (TLS)
#REDIS_URL=rediss://default:password@host:6380/0

# ============================================================================
# OpenAI API (Sprint 55 Week 3 - AI Planning)
# ============================================================================

# OpenAI API key for AI planning and DJP workflow
# Get from: https://platform.openai.com/api-keys
#OPENAI_API_KEY=

# OpenAI API configuration
OPENAI_BASE_URL=https://api.openai.com/v1
OPENAI_MODEL=gpt-4o
OPENAI_MAX_TOKENS=2000
OPENAI_TEMPERATURE=0.7
OPENAI_CONNECT_TIMEOUT_MS=30000
OPENAI_READ_TIMEOUT_MS=60000

# ============================================================================
# OAuth Providers
# ============================================================================

# Google OAuth credentials (Sprint 53)
# Get from: https://console.cloud.google.com/apis/credentials
#GOOGLE_CLIENT_ID=
#GOOGLE_CLIENT_SECRET=
#GOOGLE_REFRESH_TOKEN=

# Google provider toggle
PROVIDER_GOOGLE_ENABLED=false

# Google internal-only mode (restricts recipients to allowlist)
# Set to false in unit tests, true in production
GOOGLE_INTERNAL_ONLY=true

# Microsoft OAuth credentials
#MS_CLIENT_ID=
#MS_CLIENT_SECRET=
MS_TENANT_ID=common             # "common" for multi-tenant, or specific tenant ID

# Microsoft provider toggle
PROVIDER_MICROSOFT_ENABLED=false

# Microsoft internal-only mode (restricts recipients to allowlist)
MICROSOFT_INTERNAL_ONLY=true

# Public base URL for OAuth callbacks
#RELAY_PUBLIC_BASE_URL=https://your-domain.com

# ============================================================================
# Rate Limiting & Execution Limits (Sprint 51 Phase 2)
# ============================================================================

# Rate limiting toggle and limits
RATE_LIMIT_ENABLED=true
RATE_LIMIT_EXEC_PER_MIN=60

# ============================================================================
# Budget & Cost Controls
# ============================================================================

# Budget thresholds (0.0-1.0, where 1.0 = 100% of budget)
BUDGET_SOFT_THRESHOLD=0.8       # Warning threshold
BUDGET_HARD_THRESHOLD=1.0       # Block threshold

# Global budgets (in dollars)
GLOBAL_BUDGET_DAILY=25.0
GLOBAL_BUDGET_MONTHLY=500.0

# Team budgets (in dollars)
TEAM_BUDGET_DAILY_DEFAULT=10.0
TEAM_BUDGET_MONTHLY_DEFAULT=200.0

# Tenant budgets (in dollars)
TENANT_BUDGET_DAILY_DEFAULT=5.0
TENANT_BUDGET_MONTHLY_DEFAULT=100.0

# Anomaly detection
ANOMALY_SIGMA=3.0               # Standard deviations for anomaly threshold
ANOMALY_MIN_DOLLARS=3.0         # Minimum dollar amount to flag
ANOMALY_MIN_EVENTS=10           # Minimum events for statistical significance

# ============================================================================
# Independent Actions (Webhook) - Sprint 49 Phase B
# ============================================================================

# Webhook URL for independent actions (testing)
#WEBHOOK_URL=https://webhook.site/your-test-id

# ============================================================================
# File Paths & Storage
# ============================================================================

RUNS_DIR=runs
BUDGETS_PATH=config/budgets.yml
COST_EVENTS_PATH=logs/cost_events.jsonl
GOVERNANCE_EVENTS_PATH=logs/governance_events.jsonl
KEYRING_PATH=logs/keyring.jsonl
AUDIT_DIR=audit
URG_STORE_PATH=logs/graph

# ============================================================================
# Email / SMTP Configuration
# ============================================================================

#SMTP_HOST=
#SMTP_PORT=587
#SMTP_USER=
#SMTP_PASSWORD=
#SMTP_FROM_EMAIL=

# ============================================================================
# Retry & Resilience
# ============================================================================

RETRY_MAX_ATTEMPTS=3

# Gmail retry status codes (comma-separated)
GMAIL_RETRY_STATUS=429,500,502,503,504

# Slack retry status codes
SLACK_RETRY_STATUS=429,500,502,503,504

# Notion retry status codes
NOTION_RETRY_STATUS=429,500,502,503,504

# ============================================================================
# Queue Strategy
# ============================================================================

QUEUE_BACKEND_REALTIME=local    # local | redis | sqs | pubsub
QUEUE_BACKEND_BULK=local        # local | redis | sqs | pubsub
QUEUE_MAX_RETRIES=3
QUEUE_RATE_LIMIT=0              # 0 = no limit, otherwise requests per minute

# Queue backend URLs (if using external queues)
#SQS_QUEUE_URL=
#PUBSUB_TOPIC=

# ============================================================================
# Feature Flags
# ============================================================================

FEATURE_HOME=true
FEATURE_RBAC_ENFORCE=true       # Enforce RBAC checks (Sprint 51)
FEATURE_BUDGETS=true            # Enable budget enforcement

# ============================================================================
# Sprint 60 Phase 1: Dual-Write Migration
# ============================================================================

# Enable workspace-scoped Redis key schema migration (Sprint 60 Phase 1)
# When "on", writes to BOTH old (ai:jobs:{job_id}) and new (ai:job:{workspace_id}:{job_id}) schemas
# When "off" (default), writes to old schema only (backward compatibility)
# Set to "on" after Phase 1 deployment to production is stable
AI_JOBS_NEW_SCHEMA=off

# ============================================================================
# Sprint 60 Phase 2.2: Read-Routing & Schema Migration
# ============================================================================

# Prefer new workspace-scoped schema for reads (Sprint 60 Phase 2.2)
# When "on" (default), reads prefer ai:job:{workspace_id}:{job_id} over ai:jobs:{job_id}
# When "off", reads use old schema only (backward compatibility mode)
# Should remain "on" during and after migration
READ_PREFERS_NEW=on

# Enable fallback to old schema when new schema misses (Sprint 60 Phase 2.2)
# When "on" (default), reads fall back to ai:jobs:{job_id} if ai:job:{workspace_id}:{job_id} not found
# When "off", reads fail if new schema key doesn't exist (strict mode)
# Set to "off" after backfill completes and all jobs migrated to new schema
READ_FALLBACK_OLD=on

# ============================================================================
# Development / Testing Toggles
# ============================================================================

LIVE=false                      # Enable live mode (disable dry-run)
DRY_RUN=true                    # Dry-run mode for connectors
SLACK_USE_HTTP_MOCK=false       # Use HTTP mock for Slack (testing)

# Rollout dry-run mode (prevents actual execution)
ROLLOUT_DRY_RUN=false

# ============================================================================
# Microsoft-specific Settings
# ============================================================================

# Upload session configuration
MS_UPLOAD_SESSIONS_ENABLED=false
MS_UPLOAD_SESSION_THRESHOLD_BYTES=3145728   # 3 MB
MS_UPLOAD_CHUNK_SIZE_BYTES=4194304          # 4 MB

# ============================================================================
# Teams / Slack Defaults
# ============================================================================

#TEAMS_DEFAULT_TEAM_ID=
#TEAMS_DEFAULT_CHANNEL_ID=
#TEAMS_WEBHOOK_URL=

#SLACK_BOT_TOKEN=
#SLACK_DEFAULT_CHANNEL_ID=

# ============================================================================
# Notion API
# ============================================================================

#NOTION_API_TOKEN=
NOTION_API_BASE=https://api.notion.com/v1
NOTION_VERSION=2022-06-28

# ============================================================================
# Graph / Search Settings
# ============================================================================

URG_MAX_RESULTS=200

# ============================================================================
# Deployment / Traffic Management
# ============================================================================

#REGIONS=                       # Comma-separated list
#PRIMARY_REGION=
FAILOVER_POLICY=ordered         # ordered | random | latency
#TENANT_STICKY=                 # "" | "hash" | "region"

#DEPLOY_RBAC_ROLE=

# ============================================================================
# CI/CD Environment Configuration
# ============================================================================
#
# GitHub Actions CI enforces these settings for test reliability:
#
# DEV_AUTH_MODE=false
#   - CI tests run with production-safe security defaults
#   - Ensures tests catch auth bypass issues before deployment
#   - Individual tests may override in setup_method() when needed
#
# RELAY_ENV=test
#   - Identifies test environment in logs and metrics
#   - Allows environment-specific behavior in tests
#   - Prevents accidental production side effects
#
# ACTIONS_ENABLED=false
#   - Disabled by default in CI to prevent accidental execution
#   - Tests that need actions explicitly enable in setup
#
# TELEMETRY_ENABLED=false
#   - Disabled in CI to reduce noise
#   - Can be enabled for integration tests
#
# Why these defaults matter:
#   - Local dev can use DEV_AUTH_MODE=true for convenience
#   - CI must match production security posture to catch issues early
#   - Test failures in CI with DEV_AUTH_MODE=false indicate real problems
#
# Stub secrets for CI (never use these in production):
#   ACTIONS_SIGNING_SECRET=ci_stub_secret_min_32_bytes_required
#   OAUTH_ENCRYPTION_KEY=ci_stub_fernet_key_32bytes_min
#   DATABASE_URL=postgresql://ci:ci@localhost:5432/ci_test
#   OPENAI_API_KEY=test
#
# See: .github/workflows/ci.yml and .github/workflows/nightly.yml

# ============================================================================
# Sprint 57 Security Checklist
# ============================================================================
#
# Before deploying to production:
# [ ] DEV_AUTH_MODE=false (or unset)
# [ ] RELAY_ENV=production
# [ ] All secrets are strong and randomly generated
# [ ] ACTIONS_SIGNING_SECRET is set if using webhooks
# [ ] OAUTH_ENCRYPTION_KEY is set if using OAuth
# [ ] DATABASE_URL points to production database with ?sslmode=require
# [ ] REDIS_URL uses rediss:// (TLS) protocol
# [ ] .env file is in .gitignore
# [ ] Secrets are stored in secure secret manager (Railway, AWS Secrets Manager)
# [ ] Access logs are enabled and monitored
# [ ] PROVIDER_*_ENABLED flags match your deployment
# [ ] Rate limits and budgets are configured appropriately
