{
  "openapi": "3.1.0",
  "info": {
    "title": "DJP Workflow API",
    "version": "1.0.0"
  },
  "paths": {
    "/": {
      "get": {
        "summary": "Root",
        "description": "API root endpoint.",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "summary": "Metrics",
        "description": "Prometheus metrics endpoint.\n\nReturns metrics in Prometheus text exposition format.\nIf telemetry is disabled or prometheus-client is not installed,\nreturns empty response.\n\nSprint 46: Phase 1 (Metrics) implementation.",
        "operationId": "metrics_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/templates": {
      "get": {
        "summary": "Get Templates",
        "description": "List available templates.\n\nReturns:\n    List of template metadata with inputs schema",
        "operationId": "get_templates_api_templates_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TemplateInfo"
                  },
                  "type": "array",
                  "title": "Response Get Templates Api Templates Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/render": {
      "post": {
        "summary": "Render Template",
        "description": "Render a template with provided inputs.\n\nArgs:\n    request: Template name, inputs, and output format\n\nReturns:\n    Rendered HTML and/or DOCX (base64 encoded)",
        "operationId": "render_template_api_render_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RenderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RenderResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/triage": {
      "post": {
        "summary": "Triage Content",
        "description": "Triage email content via DJP workflow.\n\nArgs:\n    request: Email content and metadata\n\nReturns:\n    DJP result with artifact path",
        "operationId": "triage_content_api_triage_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TriageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "RenderRequest": {
        "properties": {
          "template_name": {
            "type": "string",
            "title": "Template Name"
          },
          "inputs": {
            "additionalProperties": true,
            "type": "object",
            "title": "Inputs"
          },
          "output_format": {
            "type": "string",
            "title": "Output Format",
            "default": "html"
          }
        },
        "type": "object",
        "required": [
          "template_name",
          "inputs"
        ],
        "title": "RenderRequest",
        "description": "Request to render a template."
      },
      "RenderResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "html": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Html"
          },
          "docx_base64": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Docx Base64"
          },
          "artifact_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Artifact Path"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "success"
        ],
        "title": "RenderResponse",
        "description": "Response from rendering a template."
      },
      "TemplateInfo": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "inputs": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Inputs"
          }
        },
        "type": "object",
        "required": [
          "name",
          "version",
          "description",
          "inputs"
        ],
        "title": "TemplateInfo",
        "description": "Template metadata for listing."
      },
      "TriageRequest": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content"
          },
          "subject": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject"
          },
          "from_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "From Email"
          }
        },
        "type": "object",
        "required": [
          "content"
        ],
        "title": "TriageRequest",
        "description": "Request to triage email content via DJP."
      },
      "TriageResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "artifact_id": {
            "type": "string",
            "title": "Artifact Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "provider": {
            "type": "string",
            "title": "Provider"
          },
          "preview": {
            "type": "string",
            "title": "Preview"
          },
          "artifact_path": {
            "type": "string",
            "title": "Artifact Path"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "success",
          "artifact_id",
          "status",
          "provider",
          "preview",
          "artifact_path"
        ],
        "title": "TriageResponse",
        "description": "Response from triaging content."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}
