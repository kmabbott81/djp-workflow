name: Rollout Controller

on:
  schedule:
    # Run every 10 minutes
    - cron: '*/10 * * * *'
  workflow_dispatch:  # Allow manual trigger

jobs:
  rollout:
    runs-on: ubuntu-latest
    # Only run if explicitly enabled and PROMETHEUS_BASE_URL is configured
    if: vars.ROLLOUT_CONTROLLER_ENABLED == 'true' && vars.PROMETHEUS_BASE_URL != ''

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Preflight - Check required variables
        id: preflight
        run: |
          set +e  # Don't fail on error

          # Check required secrets/vars
          if [ -z "${{ secrets.REDIS_URL }}" ]; then
            echo "skip=true" >> $GITHUB_OUTPUT
            echo "reason=REDIS_URL secret not configured" >> $GITHUB_OUTPUT
            exit 0
          fi

          if [ -z "${{ vars.PROMETHEUS_BASE_URL }}" ]; then
            echo "skip=true" >> $GITHUB_OUTPUT
            echo "reason=PROMETHEUS_BASE_URL variable not configured" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Check Prometheus reachability
          if ! curl -fsS --max-time 10 "${{ vars.PROMETHEUS_BASE_URL }}/-/ready" >/dev/null 2>&1; then
            echo "skip=true" >> $GITHUB_OUTPUT
            echo "reason=Prometheus not reachable from GitHub runner (private network)" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Check Redis reachability (basic validation)
          if ! echo "${{ secrets.REDIS_URL }}" | grep -qE '^rediss?://'; then
            echo "skip=true" >> $GITHUB_OUTPUT
            echo "reason=REDIS_URL format invalid" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "skip=false" >> $GITHUB_OUTPUT
          echo "All preflight checks passed"

      - name: Skip run if infrastructure not reachable
        if: steps.preflight.outputs.skip == 'true'
        run: |
          echo "⏭️  Skipping controller run: ${{ steps.preflight.outputs.reason }}"
          echo ""
          echo "This is expected if:"
          echo "  - Prometheus/Redis are on a private network (Railway internal)"
          echo "  - Infrastructure not yet configured"
          echo "  - Running during initial setup"
          echo ""
          echo "To run the controller, either:"
          echo "  1. Deploy it where your infrastructure lives (Railway worker)"
          echo "  2. Use a self-hosted GitHub runner in your VPC"
          echo "  3. Expose Prometheus/Redis publicly with IP allowlisting"
          echo ""
          echo "Or disable this workflow by setting ROLLOUT_CONTROLLER_ENABLED=false"
          exit 0

      - name: Set up Python
        if: steps.preflight.outputs.skip != 'true'
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        if: steps.preflight.outputs.skip != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install redis httpx
          pip install -e .

      - name: Run rollout controller
        if: steps.preflight.outputs.skip != 'true'
        env:
          PROMETHEUS_BASE_URL: ${{ vars.PROMETHEUS_BASE_URL }}
          REDIS_URL: ${{ secrets.REDIS_URL }}
          ROLLOUT_DRY_RUN: ${{ vars.ROLLOUT_DRY_RUN || 'false' }}
        run: |
          python scripts/rollout_controller.py

      - name: Commit audit log updates
        if: success()
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

          # Check if rollout_log.md was updated
          if [[ -f docs/evidence/sprint-54/rollout_log.md ]]; then
            git add docs/evidence/sprint-54/rollout_log.md

            # Only commit if there are changes
            if ! git diff --cached --quiet; then
              git commit -m "chore: Update rollout audit log [skip ci]"
              git push
            else
              echo "No changes to rollout log"
            fi
          else
            echo "No rollout log file found"
          fi

      - name: Upload controller logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: rollout-controller-logs-${{ github.run_id }}
          path: |
            docs/evidence/sprint-54/rollout_log.md
          if-no-files-found: ignore
