name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for changelog

    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.11'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Install project dependencies
      run: |
        pip install -r requirements.txt || true
        pip install -r requirements-dev.txt || true

    - name: Build package
      run: |
        python -m build

    - name: Check distribution files
      run: |
        python -m twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-packages
        path: dist/*
        retention-days: 30

    - name: Extract version from tag
      id: get_version
      run: |
        echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        draft: true
        name: Release ${{ steps.get_version.outputs.TAG_NAME }}
        body: |
          ## djp-workflow v${{ steps.get_version.outputs.VERSION }}

          Initial production release of the Debate-Judge-Publish workflow pipeline.

          ### Key Features
          - Complete DJP workflow (Debate-Judge-Publish)
          - Grounded mode with corpus and citation enforcement
          - Redaction layer for PII/secrets
          - Observability dashboard and metrics
          - 57 test cases, schema v1.1, comprehensive documentation

          ### Installation
          ```bash
          pip install djp-workflow==${{ steps.get_version.outputs.VERSION }}
          ```

          See [CHANGELOG.md](https://github.com/kmabbott81/djp-workflow/blob/main/CHANGELOG.md) for full details.
        files: |
          dist/*.tar.gz
          dist/*.whl
        fail_on_unmatched_files: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish release summary
      run: |
        echo "### Release Created :rocket:" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Version:** ${{ steps.get_version.outputs.TAG_NAME }}" >> $GITHUB_STEP_SUMMARY
        echo "**Status:** Draft (ready for review)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Artifacts:**" >> $GITHUB_STEP_SUMMARY
        ls -lh dist/ >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Review the draft release and publish when ready." >> $GITHUB_STEP_SUMMARY
