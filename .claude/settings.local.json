{
  "permissions": {
    "allow": [
      "Bash(railway logs:*)",
      "Bash(railway variables:*)",
      "Bash(python:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git log:*)",
      "Bash(curl -s -X POST \"https://webhook.site/de889c2e-bcd9-4a65-875e-bcca80204be6\" )",
      "Bash(cat:*)",
      "Bash(curl:*)",
      "Bash(alembic revision:*)",
      "Bash(ACTIONS_ENABLED=true TELEMETRY_ENABLED=true PROVIDER_GOOGLE_ENABLED=false WEBHOOK_URL=https://webhook.site/de889c2e-bcd9-4a65-875e-bcca80204be6 ACTIONS_SIGNING_SECRET=2PqptqBtihqd8baOFTL-3iJAtUx4Hi0vcGMLRhu7A5c timeout 10 python -m uvicorn src.webapi:app --port 8003)",
      "Bash(git push:*)",
      "Bash(gh pr create:*)",
      "Bash(tree:*)",
      "Bash(pytest:*)",
      "Bash(git checkout:*)",
      "Bash(git reset:*)",
      "Bash(gh pr list:*)",
      "Bash(gh pr view:*)",
      "Bash(python3:*)",
      "Bash(gh pr merge:*)",
      "Bash(git pull:*)",
      "Bash(railway run:*)",
      "Bash(pip install:*)",
      "Bash(set REDIS_URL=redis://default:zhtagqDujRcWQzETQOgHYLYYtiVduGTe@crossover.proxy.rlwy.net:22070)",
      "Bash(redis-cli:*)",
      "Bash(echo $REDIS_URL)",
      "Bash(env)",
      "Bash(railway service:*)",
      "Bash(set ACTIONS_ENABLED=true)",
      "Bash(set TELEMETRY_ENABLED=true)",
      "Bash(set PROVIDER_GOOGLE_ENABLED=true)",
      "Bash(set GOOGLE_CLIENT_ID=70455570373-o3l12k6gdokvpr87l66hh6jh7bvqpnbo.apps.googleusercontent.com)",
      "Bash(set GOOGLE_CLIENT_SECRET=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)",
      "Bash(cmd:*)",
      "Bash(timeout:*)",
      "Bash(set DATABASE_URL=postgresql://postgres:dw33GA0E7c!E8!imSJJW^xrz@switchyard.proxy.rlwy.net:39963/railway)",
      "Bash(set OAUTH_ENCRYPTION_KEY=Mvwr_5P4VoevQaR7WcNUom56zII1QuECnErU0PfBSSE=)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(taskkill:*)",
      "Bash(dir:*)",
      "Bash(move scriptsmanual_token_setup.py scriptsoauth )",
      "Bash(move scriptscomplete_oauth.py scriptsoauth )",
      "Bash(move scriptsstore_tokens.py scriptsoauth )",
      "Bash(move scriptsoauth_flow.py scriptsoauth)",
      "Bash(set ROLLOUT_DRY_RUN=true)",
      "Bash(find:*)",
      "Bash(git rm:*)",
      "Bash(git fetch:*)",
      "Bash(git stash:*)",
      "Bash(gh pr comment:*)",
      "Bash(git merge --no-ff origin/main -m \"$(cat <<''EOF''\nMerge branch ''origin/main'' into sprint-59/s59-01-metrics-workspace\n\nResolves conflicts by keeping S59-05 hotfix implementation:\n- Keeps Sprint 58 Slice 5 validation (strict extra=''forbid'', params constraints, action_id regex)\n- Keeps workspace-scoped /ai/jobs endpoints with cursor-based pagination\n- Keeps telemetry recording with workspace_id labels\n- Keeps PII redaction (params excluded from job summaries)\n- Integrates Sprint 55 Week 3+ changes from main branch\n\nS59-05 hotfix maintains:\n- SCAN pattern: ai:job:* (with application-layer workspace filtering)\n- count=limit*2 buffer for cross-workspace filtering overhead\n- Exception chaining for cursor injection prevention\n- Generic error messages (log internally, return to client)\n\nðŸ¤– Generated with Claude Code\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git diff:*)",
      "Bash(git show:*)",
      "Bash(git merge:*)"
    ],
    "deny": [],
    "ask": []
  }
}
